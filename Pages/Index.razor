@page "/"
@using PhantomAirInvite.Shared
@inject Microsoft.JSInterop.IJSRuntime JS

@if (showIntro)
{
  <IntroLetter Headline="From the Opera’s Desk"
               Body="Your Invitation to a presentation. Inside your seats, our flight path, and a game or two to unlock prizes."
               PresentationDate="@PresentationDate"
               OnOpen="DismissIntro" />
}
else
{
  <div class="section text-center">
    <h1 style="letter-spacing:.12em">PHANTOM'S LETTER</h1>

    <div class="card maxw" style="margin-bottom:10px">
      <strong>See you Friday:</strong> @PresentationDate.ToString("dddd, MMM d") — “What we’ll do in Chicago”
    </div>

    <div class="maxw maxw--wide">
      <FlightMap />
    </div>

    <div class="card maxw tickets-wrap" style="margin-top:14px">
      <h3 style="margin-top:0">Presentation Tickets</h3>
      <Tickets Items="@tickets" />
    </div>
  </div>
}

@code {
  DateTime PresentationDate = new DateTime(2025, 10, 24);

  Tickets.Ticket[] tickets = new Tickets.Ticket[] {
    new Tickets.Ticket("Raquel Sanchez","Living Room", "R", "24", "Cadillac Palace Theatre, Chicago"),
    new Tickets.Ticket("Erica Penaflor", "Living Room", "E", "67", "Cadillac Palace Theatre, Chicago"),
  };

  bool showIntro = true;

  protected override async Task OnInitializedAsync()
  {
    try
    {
      var val = await JS.InvokeAsync<string>("storage.get", "phantom_intro_dismissed");
      showIntro = string.IsNullOrWhiteSpace(val);  // if nothing stored => show intro
    }
    catch
    {
      showIntro = true; // fallback to showing intro
    }
  }

  private async Task DismissIntro()
  {
    showIntro = false;
    StateHasChanged();
    try { await JS.InvokeVoidAsync("storage.set", "phantom_intro_dismissed", "1"); } catch { }
  }
}
