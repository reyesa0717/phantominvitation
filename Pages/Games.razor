@* enable nullable in this file *@
#nullable enable

@page "/games"
@using PhantomAirInvite.Shared.Games
@inject Microsoft.JSInterop.IJSRuntime JS

@code {
  private static readonly string[] Pool = new[] {
    "🍸 Any alcohol you want!",
    "🧤🧣 Winter Kit (Gloves + Warmers)",
    "✈️💤 Airplane Pillow",
    "🐔🍟 Chick-fil-A Gift Card",
    "💄💳 Ulta Gift Card",
    "🍬🛍️ Bag of Candy",
    "🎭 Phantom Pin / Sticker",
    "🧦 Cozy Socks",
    "🧴🪥 Travel Mini Kit",
    "🍩 Donut"

  };

  string? scratchPrize;
  string? memoryPrize;

  string PickRandom() => Pool[new Random().Next(Pool.Length)];
  string PickDistinct(string other)
  {
    var r = new Random();
    string p;
    do { p = Pool[r.Next(Pool.Length)]; } while (p == other);
    return p;
  }

  protected override async Task OnInitializedAsync()
  {
    try
    {
      scratchPrize = await JS.InvokeAsync<string>("storage.get", "phantom_scratch_prize");
      memoryPrize  = await JS.InvokeAsync<string>("storage.get", "phantom_memory_prize");
    }
    catch { /* ignore (first run or helper missing) */ }

    // First run? Generate and persist two distinct prizes
    if (string.IsNullOrWhiteSpace(scratchPrize) || string.IsNullOrWhiteSpace(memoryPrize))
    {
      var first = scratchPrize ?? PickRandom();
      var second = memoryPrize ?? PickDistinct(first);

      scratchPrize = first;
      memoryPrize  = second;

      try
      {
        await JS.InvokeVoidAsync("storage.set", "phantom_scratch_prize", scratchPrize);
        await JS.InvokeVoidAsync("storage.set", "phantom_memory_prize",  memoryPrize);
      }
      catch { /* ignore */ }
    }
  }
}

<div class="section game-center">
  <h2>Quick Games</h2>
  <p class="card game-intro">
    Earn up to <strong>2 prizes</strong> tonight. One from each game. Please send a screenshot of your prize!
  </p>

  <!-- SCRATCH-OFF (compact) -->
  <div class="card game-card">
    <h3 style="margin-top:0">Scratch-Off: Reveal the Mask</h3>
    <div class="scratch-wrap">
      <PhantomAirInvite.Shared.Games.ScratchOff
        PrizeText="@(scratchPrize ?? "🎟 Mystery Prize")"
        CoverColor="#3a1012"
        Width="280"
        Height="150"
        Threshold="0.55" />
    </div>
    <p class="game-note">(Prize limit 1 from this game)</p>
  </div>

  <!-- MEMORY MATCH (compact) -->
  <div class="card game-card">
    <h3 style="margin-top:0">Memory Match: Light the Candles</h3>
    <div class="memory-wrap">
      <PhantomAirInvite.Shared.Games.MemoryMatch />
    </div>

    <p class="game-note">(Prize limit 1 from this game)</p>
  </div>
</div>
