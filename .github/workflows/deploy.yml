name: Deploy Blazor WASM to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Publish Blazor WASM
        run: dotnet publish ./PhantomAirInvite.csproj -c Release -o dist

      # Find where index.html actually landed
      - name: Detect site directory
        id: detect
        shell: bash
        run: |
          echo "Listing dist:"
          ls -la dist || true
          echo "Listing dist/wwwroot:"
          ls -la dist/wwwroot || true
          echo "Listing bin publish:"
          ls -la bin/Release/*/publish/wwwroot || true

          if [ -f dist/wwwroot/index.html ]; then
            echo "SITE_DIR=dist/wwwroot" >> $GITHUB_ENV
          elif [ -f dist/index.html ]; then
            # Some templates publish directly into dist
            echo "SITE_DIR=dist" >> $GITHUB_ENV
          elif [ -f bin/Release/net8.0/publish/wwwroot/index.html ]; then
            echo "SITE_DIR=bin/Release/net8.0/publish/wwwroot" >> $GITHUB_ENV
          elif [ -f bin/Release/net7.0/publish/wwwroot/index.html ]; then
            echo "SITE_DIR=bin/Release/net7.0/publish/wwwroot" >> $GITHUB_ENV
          else
            echo "‚ùå Could not find index.html. Folder tree for debugging:" 
            find . -maxdepth 5 -type f -name index.html
            exit 1
          fi
          echo "Detected site dir: $SITE_DIR"

      # Add 404.html for client-side routing
      - name: Add 404.html for SPA routing
        run: cp "$SITE_DIR/index.html" "$SITE_DIR/404.html"

      - name: Configure Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ env.SITE_DIR }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
