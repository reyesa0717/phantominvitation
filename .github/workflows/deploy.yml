name: Deploy Blazor WASM to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Restore
        run: dotnet restore ./PhantomAirInvite.csproj

      - name: Publish Blazor WASM
        run: dotnet publish ./PhantomAirInvite.csproj -c Release -o build

      - name: Debug output (where did Blazor publish?)
        run: |
          echo "Listing build:"
          ls -la build || true
          echo "Listing build/wwwroot:"
          ls -la build/wwwroot || true
          echo "Listing build/wwwroot/phantominvitation (if exists):"
          ls -la build/wwwroot/phantominvitation || true

      # Detect actual folder that contains index.html
      - name: Locate index.html and set PUBLISH_DIR
        run: |
          if [ -f "build/wwwroot/index.html" ]; then
            echo "PUBLISH_DIR=build/wwwroot" >> $GITHUB_ENV
            echo "Using PUBLISH_DIR=build/wwwroot"
          elif [ -f "build/wwwroot/phantominvitation/index.html" ]; then
            echo "PUBLISH_DIR=build/wwwroot/phantominvitation" >> $GITHUB_ENV
            echo "Using PUBLISH_DIR=build/wwwroot/phantominvitation"
          else
            echo "❌ Could not find index.html. Searching…"
            find build -maxdepth 4 -type f -name "index.html" -print
            exit 1
          fi

      - name: Ensure .nojekyll
        run: touch "$PUBLISH_DIR/.nojekyll"

      - name: Add 404.html for client routing
        run: cp "$PUBLISH_DIR/index.html" "$PUBLISH_DIR/404.html"

      - name: Configure Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ env.PUBLISH_DIR }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
